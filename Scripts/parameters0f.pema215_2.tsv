#= pema_version: 2.1.5
#   --------------------------         GENERAL PARAMETERS       --------------------------
#
#=     gene:
#=        title: marker gene
#=        description: Indicates the marker gene of the study. Currently PEMA supports the analysis of 16S, 12S, 18S, ITS and COI marker genes. Add the name of the marker gene after the underscore ("_")
#=        type: string
#=        required: True
#=        validation:
#=          - regex: /^gene_(COI|16S|18S|12S|ITS)$/
gene	gene_16S
#
#=     outputFolderName:
#=        title: output folder name
#=        description: Name of the output folder PEMA will save its results
#=        type: string
#=        required: True
outputFolderName	pema215_2
#
#=     EnaData:
#=        title: ENA data format
#=        description: PEMA requires the names of the samples to be in ENA format (e.g "ERR1021912_1.fastq.gz"). In that case EnaData would be "Yes". Otherwise, if the raw data are as returned by the Illumina sequencer PEMA has to make this convertion (EnaData: No) and it will return a mapping file linking the initial filenames to those created for the analysis.
#=        type: boolean
#=        required: True
#=        validation: 
#=          - value: Yes
#=          - value: No
EnaData	Yes
#
#=     sequencerPrefix:
#=        title: sequencer prefix
#=        description: Each sequencer has a special combination of letters with which all its reads start with (e.g., "@M0"). Please provide this pattern if the EnaData is "No". 
#=        type: string
#=        required: True
sequencerPrefix	M0
#
# ------------------------------------     PRE-PROCESSING : APPROACH     ------------------------------------
#
#=     preprocess:
#=        title: preprocess approach
#=        description: Since the v.2.1.5 of PEMA the user may choose between either the initial PEMA implementation for pre-processing (Trimmomatic, pandaseq) or the latest one (fastp). If you choose the original approach (Trimmomatic) you should skip the fastp-related parameters and vice-versa."""
#=        type: string
#=        required: True
#=        validation:
#=          - value: original
#=          - value: fastp
preprocess	fastp
#
#   --------------------------     PRE-PROCESSING PARAMETERS : fastp     --------------------------
#
#=     fastpThreads:
#=        title: fastp threads
#=        description: Number of threads to be used by fastp
#=        type: integer
#=        required: False
fastpThreads	20
#
#=     disable_adapter_trimming:
#=        title:
#=        description: Adapter trimming is enabled by default. If this option is specified, adapter trimming is disabled
#=        type: boolean
#=        required: False
disable_adapter_trimming	True
#
#=     detect_adapter_for_pe:
#=        title:
#=        description: Adapter sequence auto-detection.
#=        type: boolean
#=        required:
detect_adapter_for_pe	True
#
#=     adapter_sequence:
#=        title:
#=        description: the adapter for read1.This is used if R1/R2 are found not overlapped.
#=        type: string
#=        required: False
#=        validation:
#=          -value: {A, T, C, G}*n
adapter_sequence	"ATCCTC"
#
#=     adapter_sequence_r2:
#=        title:
#=        description: the adapter for read2. This is used if R1/R2 are found not overlapped. If not specified, it will be the same as <adapter_sequence>.
#=        type: string
#=        required: False
#=        validation:
#=         -value: {A, T, C, G}*n
adapter_sequence_r2	"ATCCTC"
#
#=     correction:
#=        title: Enable base correction in overlapped regions, default is disabled.
#=        description:
#=        type:
#=        required: False
correction	True
#
#=     overrepresentation_analysis:
#=        title:
#=        description: enable overrepresented sequence analysis; for a description of the analysis see https://doi.org/10.1093/bioinformatics/bty560  
#=        type:
#=        required: False
overrepresentation_analysis	True
#
#=     overrepresentation_sampling:
#=        title:
#=        description: One in (--overrepresentation_sampling) reads will be computed for overrepresentation analysis (1~10000), smaller is slower, default is 20.
#=        type: integer
#=        required: False
overrepresentation_sampling	20 
#
#=     overlap_diff_percent_limit
#=        title:
#=        description: The maximum percentage of mismatched bases to detect overlapped region of PE reads. This will affect overlap analysis based PE merge, adapter trimming and correction. Default 20 means 20%.
#=        type: integer
#=        required: False
overlap_diff_percent_limit	20
#
#=      complexity_threshold:
#=         title:
#=         description: The threshold for low complexity filter (0~100). Default is 30, which means 30% complexity is required. 
#=         type: integer
#=         required: False
complexity_threshold	30
#
#=     length_required:
#=        title:
#=        description: Reads shorter than length_required will be discarded, default is 15.
#=        type: integer
#=        required: False
length_required	110
#
#=      n_base_limit:
#=         title:
#=         description: If one read's number of N base is >n_base_limit, then this read/pair is discarded. Default is 5.
#=         type:
#=         required:
n_base_limit	5
#
#=     cut_front:
#=        title:
#=        description: Move a sliding window from front (5') to tail, drop the bases in the window if its mean quality < threshold, stop otherwise.
#=        type:
#=        required:
cut_front	True
#
#=     cut_front_mean_quality:
#=        title:
#=        description: The mean quality requirement option for cut_front. Range: 1~36 default: 20 (Q20).
#=        type: integer
#=        required: False
cut_front_mean_quality	20
#
#=     cut_front_window_size:
#=        title:
#=        description: The window size option of cut_front. Range: 1~1000, default: 4.
#=        type: integer
#=        required: False
cut_front_window_size	4
#
#=     cut_tail:
#=        title:
#=        description: Move a sliding window from tail (3') to front, drop the bases in the window if its mean quality < threshold, stop otherwise.
#=        type: boolean
#=        required: False
cut_tail	True
#
#=     cut_tail_window_size:
#=        title:
#=        description: The window size option of cut_tail. Range: 1~1000, default: 4.
#=        type: integer
#=        required: False
cut_tail_window_size	4
#
#=     cut_tail_mean_quality:
#=        title:
#=        description: The mean quality requirement option for cut_tail. Range: 1~36 default: 20 (Q20)
#=        type: integer
#=        required: False
cut_tail_mean_quality	20
#
#=     cut_right:
#=        title:
#=        description: Move a sliding window from front to tail, if meet one window with mean quality < threshold, drop the bases in the window and the right part, and then stop.
#=        type: boolean
#=        required: False
cut_right	True
#
#=     cut_right_window_size:
#=        title:
#=        description: The window size option of cut_right. Range: 1~1000, default: 4.
#=        type: integer
#=        required: False
cut_right_window_size	4
#
#=     cut_right_mean_quality:
#=        title:
#=        description: The mean quality requirement option for cut_right. Range: 1~36 default: 20 (Q20)
#=        type: integer
#=        required: False
cut_right_mean_quality	20
#
#
#   --------------------------     PRE-PROCESSING PARAMETERS : original approach     --------------------------
#
#   --------------------------     PRE-PROCESSING PARAMETERS : Trimmomatic     --------------------------
#
#=     maxInfo:
#=        title: maximum information
#=        description: A Trimmomatic parameter. When enabled, it performs an adaptive quality trim, balancing the benefits of retaining longer reads against the costs of retaining bases with errors.
#=        type: boolean
#=        required: True
#=        validation: 
#=          - value: Yes
#=          - value: No
maxInfo	Yes
#
#=     targetLength:
#=        title: maximum information
#=        description: A Trimmomatic parameter. Specifies the read length which is likely to allow the location of the read within the target sequence to be determined.
#=        type: integer
#=        required: True
#=        validation: 
#=          - range: 
#=            min: 1
targetLength	100
#
#=     strictness:
#=        title: strictness
#=        description: A Trimmomatic parameter. Specifies the balance between preserving as much read length as possible vs. removal of incorrect bases. A low value of this parameter (<0.2) favours longer reads, while a high value (>0.8) favours read correctness.
#=        type: float
#=        required: True
#=        validation:
#=          - range:
#=            min: 0.0
#=            max: 1.0
strictness	0.8
#
#=     adapters:
#=        title: adapters
#=        description: A Trimmomatic parameter. Suggested adapter sequences are provided for TruSeq2 (as used in GAII machines) and TruSeq3 (as used by HiSeq and MiSeq machines),
#=        type: string
#=        required: True
adapters	adapters_combined_152_unique.fasta
#
#=     seedMismatches:
#=        title: adapters
#=        description: A Trimmomatic parameter. Specifies the maximum mismatch count which will still allow a full match to be performed.
#=        type: integer
#=        required: True 
#=        validation: 
#=          - range: 
#=            min: 0 
seedMismatches	0
#
#=     palindromeClipThreshold:
#=        title: adapters
#=        description: A Trimmomatic parameter. Specifies how accurate the match between the two 'adapter ligated' reads must be for PE palindrome read alignment.
#=        type: integer
#=        required: True
#=        validation: 
#=          - range: 
#=            min: 1 
palindromeClipThreshold	20
#
#=     simpleClipThreshold:
#=        title: simple ClipThreshold
#=        description: A Trimmomatic parameter. Specifies how accurate the match between any adapter etc. sequence must be against a read.
#=        type: integer
#=        required: True
#=        validation:
#=          - range: 
#-             min: 0 
simpleClipThreshold	30
#
#=     leading:
#=        title: simple ClipThreshold
#=        description: A Trimmomatic parameter. Removes low quality bases from the beginning. As long as a base has a value below this threshold (value of the 'leading' parameter) the base is removed and the next base will be investigated.
#=        type: integer
#=        required: True
#=        validation: 
#=          - range: 
#=            min: 0 
leading	20
#
#=     trailing:
#=        title: trailing
#=        description: A Trimmomatic parameter. Removes low quality bases from the end. As long as a base has a value below this threshold (value of the 'trailing' parameter), the base is removed and the next base (which as Trimmomatic is starting from the 3' prime end, would be base preceding the just removed base) will be investigated.
#=        type: integer
#=        required: True
#=        validation: 
#=          - range: 
#=            min: 0 
trailing	2
#
#=     minlen:
#=        title: minimum length of the amplicon
#=        description: A Trimmomatic parameter. Removes reads that fall below the specified minimal length.
#=        type: integer
#=        required: True
#=        validation: 
#=          - range: 
#=            min: 1
minlen	100
#
#=     threadsTrimmomatic:
#=        title: minimum length of the amplicon
#=        description: A Trimmomatic parameter. Set how many threads you want Trimmomatic to run into.
#=        type: integer
#=        required: True
#=        validation: 
#=          - range: 
#=            min: 0 
threadsTrimmomatic	8
#
#
#   --------------------------     PRE-PROCESSING PARAMETERS : PANDAseq     --------------------------
#
#=     pandaseqAlgorithm:
#=        title: minimum length of the amplicon
#=        description: Merging algorithm of the PANDAseq parameter. The user might select among the `simple_bayesian` (Masella 2012), the `pear` (Zhang 2013), the `stich` and the `flash` algorithms.
#=        type: string
#=        required: True
#=        validation: 
#=          - value: simple_bayesian
#=          - value: pear 
#=          - value: stich
#=          - value: flash
pandaseqAlgorithm	simple_bayesian
#
#=     pandaseqThreads:
#=        title: pandaseq threads
#=        description: Set number of threads to be used from pandaseq. PANDAseq is a I/O bound algorithm. That means that it needs severous time in order to handle the ipnut and output files. while the process is quite fast. However, it does support multithreading and here you can set the number of threads it is going to use.
#=        type: integer
#=        required: True
#=        validation:
#=          - range:
#=            min: 0
pandaseqThreads	8
#
#=     pandaseqMinlen:
#=        title: pandaseq minimum length
#=        description: Sets the minimum length for a sequence, after primers are removed. By default, all sequences are kept. With this option, sequences shorter than desired can be discarded. In case you need to use this parameter, be sure you leave a tab after 'minlen' and set it like this: '-l 80'. If you do not want to use this parameter, make sure there is nothing after 'minlen'.
#=        type: integer
#=        required: True
#=        validation: 
#=          - range: 
#=            min: 0 
pandaseqMinlen	
#
#=     minoverlap:
#=        title: pandaseq minimum overlap
#=        description: Sets the minimum overlap between forward and reverse reads. Raising this number does not generally increase the quality of the output as alignments with small overlaps tend to score poorly and are discarded anyway.
#=        type: integer
#=        required: True
#=        validation:
#=          - range: 
#=            min: 0
minoverlap	1 
#
#=     threshold:
#=        title: threshold
#=        description: Sets the score, that a sequence must meet to be kept in the output. Any alignments lower than this will be discarded as low quality. Increasing this number will not necessarily prevent uncalled bases (Ns) from appearing in the final sequence. It is also used as the threshold to match primers, if primers are supplied.
#=        type: float
#=        required: True
#=        validation:
#=            - range: 
#=              min:  0.0
#=              max: 1.0
threshold	0.6 
#
#=     elimination:
#=        title: elimination
#=        description: The '-N' parameter eliminates all sequences with uncalled nucleotides in the output. Otherwise, during assembly, uncalled bases (Ns) from unpaired regions may be emitted. If you need -N to be on your analysis, please add '-N' after 'elimination'. Please make sure you leave a tab. If you do not want the parameter to be on, please make sure there is nothing after the 'elimination' parameter.
#=        type: string
#=        required: True
#=        validation: 
#=          - value: ''
#=          - value: -N
elimination	
#
#   --------------------------        CLUSTERING PARAMETERS           --------------------------
#
#=     clusteringAlgo:
#=        title: clustering algorithm
#=        description: For OTU clustering PEMA invokes the vsearch algorithm while for ASVs inference the Swarm. Select which way to go.  
#=        type: string
#=        required: True
#=        validation:
#=          - value: algo_Swarm
#=          - value: algo_vsearch
clusteringAlgo	algo_vsearch
#
#   --------------------------     CLUSTERING PARAMETERS : VSEARCH     --------------------------
#
#=     vsearchThreads:
#=        title: vsearch threads
#=        description: Set the number of threads PANDAseq to use.
#=        type: integer
#=        required: True
#=        validation:
#=          - range: 
#=            min: 0
vsearchThreads	20
#
#=     vsearchId:
#=        title: vsearch threads
#=        description: Set a score about the clustering step of the VSEARCH algorithm. Do not add a read into a certain cluster if the pairwise identity with its centroid, is lower than the value of the 'vsearchId' parameter. The pairwise identity is defined as the number of (matching columns) / (alignment length - terminal gaps).
#=        type: float
#=        required: True
#=        validation:
#=          - range: 
#=            min: 0.0
#=            max: 1.0
vsearchId	0.95
#
#   --------------------------     CLUSTERING PARAMETERS : Swarm     --------------------------
#
#=     d:
#=        title: d
#=        description: Maximum number of differences allowed between two amplicons, meaning that two amplicons will be grouped if they hav e integer (or less) differences.
#=        type: integer
#=        required: True
#=        validation:
#=          - range: 
#=            min: 0 
d	3
#
#=     boundary:
#=        title: boundary
#=        description: By default, an ASV with a mass of 3 or more is considered large. Conversely, an ASV is small if it has a mass of less than 3, meaning that it is composed of either one amplicon of abundance 2, or two amplicons of abundance 1. Any positive value greater than 1 can be specified. Using higher boundary values will speed up the second pass, but also reduce the taxonomical resolution of swarm results.
#=        type: integer
#=        required: True
#=        validation:
#=          - range: 
#=            min: 0
boundary	
#
#=     swarmThreads:
#=        title: swarmThreads
#=        description: The number of threads (CPUs) the Swarm algorithm is allowed to use
#=        type: integer
#=        required: True
#=        validation:
#=          - range: 
#=            min: 1
swarmThreads	20
#
#  -----------------------------     OLIGOTONS        -------------------------------------
#
#=     removeOligotons:
#=        title: removeOligotons
#=        description:  Remove the oligotons (OTUs that appear with an abuncance less that numOligotons) ?
#=        type: boolean
#=        required: True
#=        validation:
#=          - value: Yes
#=          - value: No
removeOligotons	No
#
#=     numOligotons:
#=        title: numOligotons
#=        description:  The minimum number of reads that have been clustered under the same OTUs in order not to skip that OTU
#=        type: integer
#=        required: True
#=        validation:
#=          - range: 
#=            min: 1
numOligotons	1
#
#
#   --------------------------     CLASSIFIER       --------------------------
#
#=     classifierAlgo:
#=        title: classifier algorithm
#=        description:  Select classifier for the taxonomy assignment step. If you have 16S, 18S, ITS you should choose CREST. If you have COI, 12S you should choose RDPClassifier. If you are about to use custom reference database, please make sure you are following the instructions described here  https://hariszaf.github.io/pema_documentation/training_crest_classifier/ (for CREST) and here https://hariszaf.github.io/pema_documentation/training_rdpclassifier/ (for RDPClassifier).
#=        type: string
#=        required: True
#=        validation:
#=          - value: RDPClassifier
#=          - value: CREST
classifierAlgo	CREST
#
#=     taxonomyFolderName:
#=        title: number of cores for PaPaRa
#=        description: Name of the output folder CREST returns. In case you run an analysis for a second, make sure you change this parameter otherwise PEMA will fail. Parameter required if gene: ['16S', '18S', 'ITS'].
#=        type: string
#=        required: True 
taxonomyFolderName	my_taxon_assign
#
#
#   --------------------------     GENE-SPECIFIC : 16S/18S     --------------------------
#
#=     taxonomyAssignmentMethod:
#=        title: vsearch threads
#=        description: Select between 2 different approaches of taxonomy assignment (alignment & phylogenetic based). Alignment based taxonomy is based on Silva database (versions 128 or 132). a phylogenetic based assignment, by putting 'phylogeny' in this parameter. In the case of phylogeny based taxonomy assignment, a reference tree created by the PEMA group and based on Silva v.128 is used. Parameter required only if gene: gene_16S.
#=        type: string
#=        required: True
#=        validation: 
#=          - value: alignment
#=          - value: phylogeny
taxonomyAssignmentMethod	alignment
#
#=     numberOfCoresForPapara:
#=        title: number of cores for PaPaRa
#=        description: In case of phylogeny based taxonomy assignment, set the number of threads the PaPaRa software will use. The parameeter is required if axonomyAssignmentMethod: phylogeny and gene: gene_16S
#=        type: integer
#=        required: True 
#=        validation:
#=          - range:
#=            min: 0
numberOfCoresForPapara	7
#
#=     referenceDb:
#=        title: reference database 
#=        description: When you use the alignment-based taxonomy assignment, then the LCAClassifier from the CREST algorithm, uses a Silva version for the assignment. PEMA allows you to choose between the two last version of Silva. Hence, set the "silvaVersion" parameter either as 'silva_128' or as 'silva_132' depending on the version of your choice. In case you are running 18S rRNA data, you may also use the PR2 database, by setting the referenceDb parametera as 'pr2'. The parameter is required if custom_ref_db: No and gene: [gene_16S, 'gene_18S', 'gene_COI']
#=        type: string
#=        required: True
#=        validation: 
#=          - value: silva_128
#=          - value: silva_132
#=          - value: pr2
#=          - value: midori_1
#=          - value: midori_2
referenceDb	silva_132
#
#   --------------------------     GENE-SPECIFIC : ITS     --------------------------
#
#=     cutadapt:
#=        title: perform a cutadapt script to 
#=        description: 
#=        type: string
#=        required: False
#=        validation:
#=          - value: Yes
#=          - value: No 
cutadapt	Yes
#
#=     forwardITSPrimer:
#=        title: forward ITS primer
#=        description: Provide the forward primer used (only in case of ITS). The parameter is required only in case that gene: gene_ITS.
#=        type: string
#=        required: True 
forwardITSPrimer	GATGAAGAACGYAGYRAA
#
#=     reverseITSPrimer:
#=        title: reverse ITS primer
#=        description: Provide the reverse primer used (only in case of ITS). The parameter is required only in case that gene: gene_ITS.
#=        type: string
#=        required: True 
reverseITSPrimer	CTBTTVCCKCTTCACTCG
#
#   --------------------------     GENE-SPECIFIC : COI     --------------------------
#
#=     abskew:
#=        title: abskew
#=        description: PEMA invokes the UCHIME_DENOVO3 algorithm for the chimera removal in the case of the COI marker gene. Probably, for environmental studies a low abskew is better, while in more specific studies a larger one would fit most. The parameter is required only if gene: gene_COI
#=        type: integer
#=        required: True
#=        validation:
#=          - range:
#=            min: 0
abskew	2
#
#   --------------------------     CUSTOM REFERENCE DATABASE     --------------------------
#
#=     custom_ref_db:
#=        title: custom reference database
#=        description: Use a custom reference database for the taxonomy assignment step. In this case, extra input files are required depending on the classifier the user selected. To see more on how these files should be in case of the RDPClassifier, follow this link: https://hariszaf.github.io/pema_documentation/training_rdpclassifier/. In case that the CREST classifier is be used, follow this link: https://hariszaf.github.io/pema_documentation/training_crest_classifier/. Remember that as containers are lost when exit from one, you will have to train the classifier, every time you run a new PEMA container If you are about to use a custom ref db, set the following parameter as 'Yes'. Otherwise, it must be set as 'No'. The `name_of_custom_db` may be empty or no depending on whether you will use a custom db or not.
#=        type: boolean
#=        required: True
#=        validation:
#=          - value: Yes
#=          - value: No
custom_ref_db	No
#
#=     name_of_custom_db:
#=        title: name of custom database
#=        description: Name of how custom reference database will be named. Parameter required only if custom_ref_db: Yes
#=        type: string
#=        required: True
name_of_custom_db	
#
#
#   --------------------------     PHYLOSEQ - SPECIFIC     --------------------------
#
#=     phyloseq:
#=        title: phyloseq
#=        description: To use Phyloseq set the following  parameter 'phyloseq' with 'Yes'. Please remember that in order to use phyloseq a "metadata.csv" file is necessary to be part of your anaylis folder. 
#=        type: boolean
#=        required: True
#=        validation:
#=          - value: Yes
#=          - value: No
phyloseq	No
#
#=     tree:
#=        title: tree
#=        description: The phyloseq object can handle phylogenetic trees as well. PEMA uses RAxML-ng in order to build such trees. Do you want to create such a tree with your OTUs? In case you build this once, you can use it as many times as you want. Parameter required if phyloseq: Yes.
#=        type: boolean
#=        required: True
#=        validation:
#=          - value: Yes
#=          - value: No
tree	No
#
#=     raxmlThreads:
#=        title: raxml threads
#=        description: Set the number of threads raxml is allowed to use. Paameter required if phyloseq: Yes and tree: Yes.
#=        type: integer
#=        required: True 
#=        validation:
#=          - range: 
#=              min: 0  
raxmlThreads	5
#
#=     parsTrees:
#=        title: parsimony trees
#=        description: Number of parsimony trees raxml-ng will go for. Parameter required if phyloseq: Yes and tree: Yes
#=        type: integer
#=        required: True
#=        validation: 
#=          - range: 
#=              min: 0 
parsTrees	5
#
#=     bootstrapTrees:
#=        title: bootstrap trees
#=        description: Number of bootstrap trees raxml-ng will go for. Parameter required if phyloseq: Yes and tree: Yes
#=        type: integer
#=        required: True 
#=        validation:
#=          - range: 
#=              min: 0 
bootstrapTrees	5
#
#   --------------------------     sum up      --------------------------
#
#=     emptyRawDataFile:
#=        title: empty raw data files 
#=        description: Move raw data to a new folder
#=        type: boolean
#=        required: True
#=        validation:
#=          - value: Yes
#=          - value: No
emptyRawDataFile	Yes
#
#=     emptyCheckpoints:
#=        title: empty check points
#=        description: Move all check points returned in a separate folder
#=        type: boolean
#=        required: True
#=        validation: 
#=          - value: Yes
#=          - value: No
emptyCheckpoints	Yes
#
#=     getNCBITaxId:
#=        title: get NCBI Taxonomy Id
#=        description: Link the OTU/ASV taxonomy assignment to its closest NCBI Taxonomy Id, meaning if there is no NCBI Taxonomy id at the species level, PEMA will search for the one of the genus and so on. 
#=        type: boolean
#=        required: True
#=        validation: 
#=          - value: Yes
#=          - value: No
getNCBITaxId	No
#
#   --------------------------     PEMA METADATA     --------------------------
#
# The following are not to be set by the user but describe each PEMA version
#=    about:  Configuration file for PEMA :version:. We encourage users to study the manual of each tool and tune these parameters according to their specific experiments
#=    version: v.2.1.5
#=    tools: https://github.com/hariszaf/pema/blob/master/help_files/encapsulated_software.md
#=    databases: https://github.com/hariszaf/pema/blob/master/help_files/encapsulated_software.md
#=    author: Haris Zafeiropoulos <haris-zaf@hcmr.gr>
#=    contributors: Christina Pavloudi <cpavloud@hotmail.com>
